<?php

namespace DummyNamespace;

use App\Models\{{StudlyCase}};
use Exception;
use Illuminate\Support\Facades\DB;
use SantosSabanari\LaravelFoundation\Services\BaseService;
use App\Events\{{StudlyCase}}Created;
use App\Events\{{StudlyCase}}Deleted;
use App\Events\{{StudlyCase}}Updated;

class {{StudlyCase}}Service extends BaseService
{
    public function __construct({{StudlyCase}} ${{camelCase}})
    {
        $this->model = ${{camelCase}};
    }

    public function store(array $data = []): {{StudlyCase}}
    {
        DB::beginTransaction();

        try {
            ${{camelCase}} = $this->model::create($data);

            event(new {{StudlyCase}}Created(${{camelCase}}));
        } catch (Exception $e) {
            DB::rollBack();

            if(config('app.debug') || $e->getCode() === 100){
                throw new Exception($e->getMessage());
            } else {
                throw new Exception(__('There was a problem creating the {{camelCase}}.'));
            }
        }

        DB::commit();

        return ${{camelCase}};
    }

    public function update({{StudlyCase}} ${{camelCase}}, array $data = []): {{StudlyCase}}
    {
        DB::beginTransaction();

        try {
            ${{camelCase}}->update($data);

            event(new {{StudlyCase}}Updated(${{camelCase}}));
        } catch (Exception $e) {
            DB::rollBack();

            if(config('app.debug') || $e->getCode() === 100){
                throw new Exception($e->getMessage());
            } else {
                throw new Exception(__('There was a problem updating the {{camelCase}}.'));
            }
        }

        DB::commit();

        return ${{camelCase}};
    }

    public function destroy({{StudlyCase}} ${{camelCase}}): bool
    {
        DB::beginTransaction();

        try {
            $this->deleteById(${{camelCase}}->id);

            event(new {{StudlyCase}}Deleted(${{camelCase}}));
        } catch (Exception $e) {
            DB::rollBack();

            if(config('app.debug') || $e->getCode() === 100){
                throw new Exception($e->getMessage());
            } else {
                throw new Exception(__('There was a problem deleting the {{camelCase}}.'));
            }
        }

        DB::commit();

        return true;
    }
}

use App\Models\Role;
use App\Models\User;
use Illuminate\Support\Facades\Route;
use SantosSabanari\LaravelFoundation\Http\Controllers\DashboardController;
use SantosSabanari\LaravelFoundation\Http\Controllers\RoleController;
use SantosSabanari\LaravelFoundation\Http\Controllers\UserController;
use SantosSabanari\LaravelFoundation\Http\Controllers\UserPasswordController;
use SantosSabanari\LaravelFoundation\Http\Controllers\UserSessionController;
use Tabuna\Breadcrumbs\Trail;

// BACKEND
Route::group([
    'prefix' => 'backend',
    'as' => 'backend.',
    'middleware' => 'admin',
], function () {
    Route::get('/', DashboardController::class)
        ->name('dashboard')
        ->breadcrumbs(fn (Trail $trail) =>
        $trail->push('Dashboard', route('backend.dashboard'))
        );

    Route::get('profile', function () {
        return 'profile';
    })->name('profile');

    // backend.system.
    Route::group([
        'prefix'=>'system',
        'as'=>'system.'
    ], function(){
        // backend.system.user
        Route::group([
            'prefix'=>'user',
            'as'=>'user.'
        ],function(){
            Route::group([
                'middleware' => 'role:'.config('laravel-foundation.role_admin'),
            ], function () {
                Route::get('create', [UserController::class, 'create'])
                    ->name('create')
                    ->breadcrumbs(function (Trail $trail) {
                        $trail->parent('backend.system.user.index')
                            ->push(__('Create User'), route('backend.system.user.create'));
                    });

                Route::post('/', [UserController::class, 'store'])->name('store');

                Route::group(['prefix' => '{user}'], function () {
                    Route::get('edit', [UserController::class, 'edit'])
                        ->name('edit')
                        ->breadcrumbs(function (Trail $trail, User $user) {
                            $trail->parent('backend.system.user.show', $user)
                                ->push(__('Edit'), route('backend.system.user.edit', $user));
                        });

                    Route::patch('/', [UserController::class, 'update'])->name('update');
                    Route::delete('/', [UserController::class, 'destroy'])->name('destroy');
                });
            });

            Route::group([
                'middleware' => 'permission:backend.system.user.list|backend.system.user.clear-session|backend.system.user.change-password',
            ], function () {
                Route::get('/', [UserController::class, 'index'])
                    ->name('index')
                    ->middleware('permission:backend.system.user.list|backend.system.user.clear-session|backend.system.user.change-password')
                    ->breadcrumbs(function (Trail $trail) {
                        $trail->parent('backend.dashboard')
                            ->push(__('User Management'), route('backend.system.user.index'));
                    });

                Route::group(['prefix' => '{user}'], function () {
                    Route::get('/', [UserController::class, 'show'])
                        ->name('show')
                        ->middleware('permission:backend.system.user.list')
                        ->breadcrumbs(function (Trail $trail, User $user) {
                            $trail->parent('backend.system.user.index')
                                ->push($user->name, route('backend.system.user.show', $user));
                        });

                    Route::post('clear-session', [UserSessionController::class, 'update'])
                        ->name('clear-session')
                        ->middleware('permission:backend.system.user.clear-session');

                    Route::get('password/change', [UserPasswordController::class, 'edit'])
                        ->name('change-password')
                        ->middleware('permission:backend.system.user.change-password')
                        ->breadcrumbs(function (Trail $trail, User $user) {
                            $trail->parent('backend.system.user.show', $user)
                                ->push(__('Change Password'), route('backend.system.user.change-password', $user));
                        });

                    Route::patch('password/change', [UserPasswordController::class, 'update'])
                        ->name('change-password.update')
                        ->middleware('permission:backend.system.user.change-password');
                });
            });
        });

        // backend.system.role
        Route::group([
            'prefix'=>'role',
            'as'=>'role.',
            'middleware' => 'role:'.config('laravel-foundation.role_admin'),
        ],function(){
            Route::get('/', [RoleController::class, 'index'])
                ->name('index')
                ->breadcrumbs(function (Trail $trail) {
                    $trail->parent('backend.dashboard')
                        ->push(__('Role Management'), route('backend.system.role.index'));
                });

            Route::get('create', [RoleController::class, 'create'])
                ->name('create')
                ->breadcrumbs(function (Trail $trail) {
                    $trail->parent('backend.system.role.index')
                        ->push(__('Create Role'), route('backend.system.role.create'));
                });

            Route::post('/', [RoleController::class, 'store'])->name('store');

            Route::group(['prefix' => '{role}'], function () {
                Route::get('edit', [RoleController::class, 'edit'])
                    ->name('edit')
                    ->breadcrumbs(function (Trail $trail, Role $role) {
                        $trail->parent('backend.system.role.index')
                            ->push(__('Editing :role', ['role' => $role->name]), route('backend.system.role.edit', $role));
                    });

                Route::patch('/', [RoleController::class, 'update'])->name('update');
                Route::delete('/', [RoleController::class, 'destroy'])->name('destroy');
            });
        });
    });
});

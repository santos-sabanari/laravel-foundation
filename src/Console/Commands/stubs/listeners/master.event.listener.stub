<?php

namespace DummyNamespace;

use App\Events\{{StudlyCase}}Created;
use App\Events\{{StudlyCase}}Deleted;
use App\Events\{{StudlyCase}}Updated;

class {{StudlyCase}}EventListener
{
    public function onCreated($event)
    {
        activity('{{camelCase}}')
            ->performedOn($event->{{camelCase}})
            ->withProperties([
                '{{camelCase}}' => [
                    DummyProperties
                ],
            ])
            ->log(':causer.name created {{camelCase}} :subject.name with permissions: :properties.permissions');
    }

    public function onUpdated($event)
    {
        activity('{{camelCase}}')
            ->performedOn($event->{{camelCase}})
            ->withProperties([
                '{{camelCase}}' => [
                    DummyProperties
                ],
            ])
            ->log(':causer.name updated {{camelCase}} :subject.name with permissions: :properties.permissions');
    }

    public function onDeleted($event)
    {
        activity('{{camelCase}}')
            ->performedOn($event->{{camelCase}})
            ->log(':causer.name deleted {{camelCase}} :subject.name');
    }

    public function subscribe($events)
    {
        $events->listen(
            {{StudlyCase}}Created::class,
            'App\Listeners\{{StudlyCase}}EventListener@onCreated'
        );

        $events->listen(
            {{StudlyCase}}Updated::class,
            'App\Listeners\{{StudlyCase}}EventListener@onUpdated'
        );

        $events->listen(
            {{StudlyCase}}Deleted::class,
            'App\Listeners\{{StudlyCase}}EventListener@onDeleted'
        );
    }
}
